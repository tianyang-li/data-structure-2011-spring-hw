/**********************************************************
 * 本声明须出现于每次作业自述文件readme.txt的首部。否则，
 * 你的作业将被视作违反了Honor Code规则，并将会按照本课程
 * 约定的方式进行处理。
 **********************************************************/

/***********************************************************
 * 我真诚地保证：
 *
 * 我独立地完成了本程序从分析、设计到编码的所有工作。如果
 * 在上述过程中我曾因遇到困难而求教于人，那么我均已在报告
 * 中详细地列举了我所遇到的问题以及别人给我的提示。
 *
 * 在此，我感谢XXX、...XXX对我的启发和帮助。在下面的报告中，
 * 我还会具体地提到他们对我的帮助之处。
 *
 * 我的程序中凡引用到其它程序或文档之处，无论是来自教材、
 * 课堂笔记、网络还是其它参考资料，我都已在程序注释中明确
 * 注明。我也清楚地知道，因这样做可能降低了作业难度，可能
 * 影响起评分。
 *
 * 我从未抄袭或盗用别人的程序，不管是原封不动地复制，还是
 * 经过了某种（些）等价转换。
 *
 * 我编写这个程序的目的，不是在于故意破坏或妨碍其它计算机
 * 系统的正常运转。
 *
 * 李天阳
 * 2009011419
 * 2011-02-22
 **********************************************************/

/***********************************************************
* 本程序使用枚举法, 在搜索过前对所有硬币重量从大到小进行排序
* 运行过程中使用简单的准则进行剪枝 (不能大于每个平均值), 
* 同时所有人最小的金币重量随人的编号递增
* 粗略估计的复杂度是 O(sum_{i=1}^{n} i^n/i!) = O(n^n)
***********************************************************/

/***********************************************************
* 性能比较
* 以下对同一个算法不同的实现进行了比较
* 此处为采用递归的版本 (速度较快, OJ 显示为 0) 
* http://data-structure-2011-spring-hw.googlecode.com/svn-history/r78/trunk/2009011419_hw2/sample/corsair/main.cc
* 不使用递归使用迭代的版本 (速度较慢, OJ 显示为 2340)
* http://data-structure-2011-spring-hw.googlecode.com/svn-history/r75/trunk/2009011419_hw2/sample/corsair/main.cc
* 造成速度差别的可能原因是 CPU 对栈的管理速度比自己直接操作数组较快 
***********************************************************/



